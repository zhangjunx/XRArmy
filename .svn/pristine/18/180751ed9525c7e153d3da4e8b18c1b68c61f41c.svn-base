package com.xr.controller;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.alibaba.fastjson.JSONObject;
import com.xr.configure.MethodLog;
import com.xr.entry.VisitorsInfo;
import com.xr.service.IVisitorsInfoService;
import com.xr.tools.ImagePathConfig;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiImplicitParam;
import io.swagger.annotations.ApiImplicitParams;
import io.swagger.annotations.ApiOperation;

@Controller
@RequestMapping("VisitorsInfo")
@Api(tags="VisitorsInfoController",description="接口标题：访客层接口")
public class VisitorsInfoController {
	@Autowired
	private IVisitorsInfoService ics;
	private SimpleDateFormat sdf=new SimpleDateFormat("yyyyMMddHHmmss");
	
	/**
	 * 新增
	 * @param record
	 * @return
	 */
	@ApiOperation(httpMethod="POST",value="接口说明：新增接口",notes="接口的notes说明")
	@ApiImplicitParams({
		@ApiImplicitParam(name="file1",value="参数：访客背景照片：base64",dataType="String",paramType="path"),
		@ApiImplicitParam(name="file2",value="参数：访客现场照片：base64",dataType="String",paramType="path"),
		@ApiImplicitParam(name="obj",value="参数：访客信息：json字符串：{'visitorsname':'alone','idtype':'证件类型：身份证，驾照，。。',"
				+ "'idcode':'412829192360107301','sexname':'男','address':'河南省郑州市金水区','carplateno':'豫A1234',"
				+ "'visitorsreason':'1:来访事由代号','visitorsreasontext':'办事:来访事由','phone':'15638810796',"
				+ "'unitno':'被访人单位：001001','unitname':'被访人单位名称：一营区','receiverpeopleid':'1001:被访人编号或军人证号',"
				+ "'receiversname':'alone:被访人姓名','receiversphone':'15638810797'}",dataType="String",paramType="path"),
		@ApiImplicitParam(name="loginid",value="参数：登录人id",dataType="String",paramType="path")
	})
	@MethodLog(methodName="新增",remark="新增访客")
	@RequestMapping(value="/insert",method=RequestMethod.POST)
	@ResponseBody
	public Map<String,Object> insert(String file1,String file2,String obj,String loginid){
		Map<String,Object> map=new HashMap<String,Object>();
		Map<String,Object> m=new HashMap<String,Object>();
		try{
			VisitorsInfo record=JSONObject.parseObject(obj, VisitorsInfo.class);
			if(file1!=null && !"".equals(file1)){
				String id="VB_"+sdf.format(new Date());
				String photostr=ImagePathConfig.base64ToPath(file1, ImagePathConfig.visitorpic, id);
			    record.setBackstr(photostr);
			}
			if(file2!=null && !"".equals(file2)){
				String id="V_"+sdf.format(new Date());
				String photostr=ImagePathConfig.base64ToPath(file2, ImagePathConfig.visitorpic, id);
			    record.setPhotostr(photostr);
			}
			int i=ics.insertSelectiveService(record);
			if(i>0){
				map.put("flag", true);
				map.put("reason", "添加成功！");
			}else{
				map.put("flag", false);
				map.put("reason", "添加失败！");
			}
		}catch(Exception ex){
			map.put("flag", false);
			map.put("reason", "程序异常，请联系管理员！");
		}
		return map;
	}//end
	
	/**
	 * 查询列表
	 * @param record
	 * @return
	 */
	@ApiOperation(httpMethod="POST",value="接口说明：查询列表接口",notes="接口的notes说明")
	@ApiImplicitParams({
		@ApiImplicitParam(name="curpage",value="参数：当前页数",dataType="Integer",paramType="path"),
		@ApiImplicitParam(name="pagesize",value="参数：每页显示数",dataType="Integer",paramType="path"),
		@ApiImplicitParam(name="id",value="参数：主键id",dataType="Integer",paramType="path"),
		@ApiImplicitParam(name="visitorsname",value="参数：访客名称:模糊查询时传参",dataType="String",paramType="path"),
		@ApiImplicitParam(name="holdername",value="参数：被访人姓名：模糊查询",dataType="String",paramType="path"),
		@ApiImplicitParam(name="loginid",value="参数：登录人id",dataType="String",paramType="path")
	})
	@RequestMapping(value="/getList",method=RequestMethod.POST)
	@ResponseBody
	public Map<String,Object> getList(VisitorsInfo record,String date,String loginid,Integer curpage,Integer pagesize){
		Map<String,Object> map=new HashMap<String,Object>();
		Map<String,Object> m=new HashMap<String,Object>();
		try{
			m.put("id", record.getId());
			m.put("visitorsname", record.getVisitorsname());
			m.put("receiversname", record.getReceiversname());
			m.put("date", date);
			m.put("curpage", curpage);
			m.put("pagesize", pagesize);
			List<Map<String,Object>> list=ics.getListService(m);
			List<Map<String,Object>> result=new ArrayList<Map<String,Object>>();
			for(int i=0;i<list.size();i++){
				Map<String,Object> m1=list.get(i);
				String photostr=String.valueOf(m1.get("photostr"));
				String backstr=String.valueOf(m1.get("backstr"));
				if(photostr!=null && !"".equals(photostr) && !"null".equals(photostr)){
					String imgUrl=ImagePathConfig.visitorpic+"/"+photostr;
					String base64=ImagePathConfig.readPicPath(imgUrl);
					m1.put("photo", base64);
				}
				if(backstr!=null && !"".equals(backstr) && !"null".equals(backstr)){
					String imgUrl=ImagePathConfig.visitorpic+"/"+backstr;
					String base64=ImagePathConfig.readPicPath(imgUrl);
					m1.put("backphoto", base64);
				}
				result.add(m1);
			}
			int count=ics.getListCountService(m);
			if(list!=null && list.size()>0){
				map.put("flag", true);
				map.put("reason", "查询成功！");
				map.put("result", result);
				map.put("count", count);
			}else{
				map.put("flag", false);
				map.put("reason", "暂无数据可查！");
			}
		}catch(Exception ex){
			map.put("flag", false);
			System.out.println(ex);
			map.put("reason", "程序异常，请联系管理员！");
		}
		return map;
	}//end
	

	
	
	
	
}
