package com.xr.controller;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.alibaba.fastjson.JSONArray;
import com.xr.configure.MethodLog;
import com.xr.entry.AccessRecord;
import com.xr.service.IAccessRecordService;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiImplicitParam;
import io.swagger.annotations.ApiImplicitParams;
import io.swagger.annotations.ApiOperation;

@Controller
@RequestMapping("AccessRecord")
@Api(tags="AccessRecord",description="接口标题：权限下发记录层接口")
public class AccessRecordController {
	@Autowired
	private IAccessRecordService iars;
	
	/**
	 * 新增
	 * @param record
	 * @return
	 */
	@ApiOperation(httpMethod="POST",value="接口说明：新增接口",notes="接口的notes说明")
	@ApiImplicitParams({
		@ApiImplicitParam(name="id",value="参数：主键id",dataType="Integer",paramType="path"),
		@ApiImplicitParam(name="holderno",value="参数：人员编号",dataType="String",paramType="path"),
		@ApiImplicitParam(name="holdername",value="参数：人员名称",dataType="String",paramType="path"),
		@ApiImplicitParam(name="boxip",value="参数：盒子ip",dataType="String",paramType="path"),
		@ApiImplicitParam(name="devicename",value="参数：设备名称：模糊查询",dataType="String",paramType="path"),
		@ApiImplicitParam(name="loginid",value="参数：登录人id",dataType="String",paramType="path")
	})
	@MethodLog(methodName="新增",remark="新增下发记录")
	@RequestMapping(value="/add",method=RequestMethod.POST)
	@ResponseBody
	public Map<String,Object> insert(String str,String type,String loginid){
		Map<String,Object> map=new HashMap<String,Object>();
		try{
			List<Map<String,Object>> data=new ArrayList<Map<String,Object>>();
			Integer nextid=iars.getNextidService();
			JSONArray arr=JSONArray.parseArray(str);
			for(int i=0;i<arr.size();i++){
				Map<String,Object> m=new HashMap<String,Object>();
				Integer holderno=arr.getInteger(i);//权限组id
				m.put("holderno", holderno);
				List<Map<String,Object>> exist=iars.getHolderService(m);
				for(int j=0;j<exist.size();j++){
					Map<String,Object> m1=exist.get(j);
					String boxid=String.valueOf(m1.get("boxid"));
					m1.put("message", "待下发");
					m1.put("type", type);
					m1.put("boxip", boxid);
					data.add(m1);
				}
			}
			
			List<Map<String,Object>> pici=new ArrayList<Map<String,Object>>();
			for(int i=0;i<data.size();i++){
				pici.add(data.get(i));
				if(pici.size()==100 || i==data.size()-1){
					int t=iars.addService(pici);
					pici.clear();
				}
			}
			if(data!=null && data.size()>0){
				new PlatBoxController().addF(nextid);
			}
		}catch(Exception ex){
			map.put("flag", false);
			map.put("reason", "程序异常，请联系管理员！");
		}
		return map;
	}//end
 
	
	/**
	 * 查询列表
	 * @param record
	 * @return
	 */
	@ApiOperation(httpMethod="POST",value="接口说明：查询列表接口",notes="接口的notes说明")
	@ApiImplicitParams({
		@ApiImplicitParam(name="curpage",value="参数：当前页数",dataType="Integer",paramType="path"),
		@ApiImplicitParam(name="pagesize",value="参数：每页显示数",dataType="Integer",paramType="path"),
		@ApiImplicitParam(name="id",value="参数：主键id",dataType="Integer",paramType="path"),
		@ApiImplicitParam(name="holderno",value="参数：人员编号",dataType="String",paramType="path"),
		@ApiImplicitParam(name="holdername",value="参数：人员名称",dataType="String",paramType="path"),
		@ApiImplicitParam(name="boxip",value="参数：盒子ip",dataType="String",paramType="path"),
		@ApiImplicitParam(name="devicename",value="参数：设备名称：模糊查询",dataType="String",paramType="path")
	})
	@RequestMapping(value="/getList",method=RequestMethod.POST)
	@ResponseBody
	public Map<String,Object> getList(AccessRecord record,String dictname,Integer curpage,Integer pagesize){
		Map<String,Object> map=new HashMap<String,Object>();
		Map<String,Object> m=new HashMap<String,Object>();
		try{
			m.put("id", record.getId());
			m.put("holdername", record.getHoldername());
			m.put("holderno", record.getHolderno());
			m.put("devicename", record.getDevicename());
			m.put("deviceno", record.getDeviceno());
			m.put("state", record.getState());
			m.put("type", record.getType());
			m.put("curpage", curpage);
			m.put("pagesize", pagesize);
			List<Map<String,Object>> list=iars.getListService(m);
			int count=iars.getListCountService(m);
			if(list!=null && list.size()>0){
				map.put("flag", true);
				map.put("reason", "查询成功");
				map.put("result", list);
				map.put("count", count);
			}else{
				map.put("flag", false);
				map.put("reason", "暂无数据可查！");
			}
		}catch(Exception ex){
			map.put("flag", false);
			System.out.println(ex);
			map.put("reason", "程序异常，请联系管理员！");
		}
		return map;
	}//end
	
 

}
