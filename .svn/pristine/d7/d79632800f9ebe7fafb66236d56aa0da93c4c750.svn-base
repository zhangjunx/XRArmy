package com.xr.controller;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;

import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import com.xr.configure.MethodLog;
import com.xr.entry.AccessRecord;
import com.xr.service.IAccessRecordService;
//import com.xr.tools.ExcelUtil;
import com.xr.tools.ExcelUtil;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiImplicitParam;
import io.swagger.annotations.ApiImplicitParams;
import io.swagger.annotations.ApiOperation;

@Controller
@RequestMapping("AccessRecord")
@Api(tags="AccessRecord",description="接口标题：权限下发记录层接口")
public class AccessRecordController {
	@Autowired
	private IAccessRecordService ics;
	
	/**
	 * 新增
	 * @param record
	 * @return
	 */
	@ApiOperation(httpMethod="POST",value="接口说明：新增接口",notes="接口的notes说明")
	@ApiImplicitParams({
		@ApiImplicitParam(name="id",value="参数：主键id",dataType="Integer",paramType="path"),
		@ApiImplicitParam(name="holderno",value="参数：人员编号",dataType="String",paramType="path"),
		@ApiImplicitParam(name="holdername",value="参数：人员名称",dataType="String",paramType="path"),
		@ApiImplicitParam(name="boxip",value="参数：盒子ip",dataType="String",paramType="path"),
		@ApiImplicitParam(name="devicename",value="参数：设备名称：模糊查询",dataType="String",paramType="path"),
		@ApiImplicitParam(name="loginid",value="参数：登录人id",dataType="String",paramType="path")
	})
	@MethodLog(methodName="新增",remark="新增下发记录")
	@RequestMapping(value="/add",method=RequestMethod.POST)
	@ResponseBody
	public Map<String,Object> insert(String str,String loginid){
		Map<String,Object> map=new HashMap<String,Object>();
		Map<String,Object> m=new HashMap<String,Object>();
		try{
			List<Map<String,Object>> list=new ArrayList<Map<String,Object>>();
			int i=ics.addService(list);
			if(i>0){
				map.put("flag", true);
				map.put("reason", "添加成功！");
			}else{
				map.put("flag", false);
				map.put("reason", "添加失败！");
			}
		}catch(Exception ex){
			map.put("flag", false);
			map.put("reason", "程序异常，请联系管理员！");
		}
		return map;
	}//end
	
	
	/**
	 * 回调接口 下发人脸权限
	 * @param record
	 * @return
	 */
	/*@ApiOperation(httpMethod="POST",value="接口说明：回调返回的下发信息接口",notes="接口的notes说明")
	@ApiImplicitParams({
		@ApiImplicitParam(name="id",value="参数：主键id",dataType="Integer",paramType="path"),
		@ApiImplicitParam(name="status",value="参数：下发状态status ,0失败，1成功，2待下发",dataType="String",paramType="path"),
		@ApiImplicitParam(name="msg",value="参数：输出信息",dataType="String",paramType="path")
	})
	@MethodLog(methodName="修改",remark="回调返回的下发信息")*/
	@RequestMapping(value="/update",method=RequestMethod.POST)
	@ResponseBody
	public Map<String,Object> update(@RequestBody Map m){
		Map<String,Object> map=new HashMap<String,Object>();
		try{
			//
			Integer id=Integer.valueOf(String.valueOf(m.get("id")));
			String status=String.valueOf(m.get("status"));
			String msg=String.valueOf(m.get("msg"));
			AccessRecord record=new AccessRecord();
			record.setId(id);
			record.setState(status);
			record.setMessage(msg);
			int i=ics.updateByPrimaryKeySelectiveService(record);
			System.out.println("id===");
			if(i>0){
				map.put("flag", true);
				map.put("reason", "回调成功！");
			}else{
				map.put("flag", false);
				map.put("reason", "回调失败！");
			}
		}catch(Exception ex){
			map.put("flag", false);
			System.out.println(ex);
			map.put("reason", "程序异常，请联系管理员！");
		}
		return map;
	}//end
 
	
	/**
	 * 查询列表
	 * @param record
	 * @return
	 */
	@ApiOperation(httpMethod="POST",value="接口说明：查询列表接口",notes="接口的notes说明")
	@ApiImplicitParams({
		@ApiImplicitParam(name="curpage",value="参数：当前页数",dataType="Integer",paramType="path"),
		@ApiImplicitParam(name="pagesize",value="参数：每页显示数",dataType="Integer",paramType="path"),
		@ApiImplicitParam(name="id",value="参数：主键id",dataType="Integer",paramType="path"),
		@ApiImplicitParam(name="holderno",value="参数：人员编号",dataType="String",paramType="path"),
		@ApiImplicitParam(name="holdername",value="参数：人员名称",dataType="String",paramType="path"),
		@ApiImplicitParam(name="boxip",value="参数：盒子ip",dataType="String",paramType="path"),
		@ApiImplicitParam(name="devicename",value="参数：设备名称：模糊查询",dataType="String",paramType="path")
	})
	@RequestMapping(value="/getList",method=RequestMethod.POST)
	@ResponseBody
	public Map<String,Object> getList(AccessRecord record,String dictname,Integer curpage,Integer pagesize){
		Map<String,Object> map=new HashMap<String,Object>();
		Map<String,Object> m=new HashMap<String,Object>();
		try{
			m.put("id", record.getId());
			m.put("holdername", record.getHoldername());
			m.put("holderno", record.getHolderno());
			m.put("devicename", record.getDevicename());
			m.put("deviceno", record.getDeviceno());
			m.put("curpage", curpage);
			m.put("pagesize", pagesize);
			List<Map<String,Object>> list=ics.getListService(m);
			int count=ics.getListCountService(m);
			if(list!=null && list.size()>0){
				map.put("flag", true);
				map.put("reason", "查询成功");
				map.put("result", list);
				map.put("count", count);
			}else{
				map.put("flag", false);
				map.put("reason", "暂无数据可查！");
			}
		}catch(Exception ex){
			map.put("flag", false);
			System.out.println(ex);
			map.put("reason", "程序异常，请联系管理员！");
		}
		return map;
	}//end
	
 

}
